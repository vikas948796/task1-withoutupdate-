{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vikas\\\\Downloads\\\\TaskManager-master\\\\TaskManager-master\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; //import conn from './Conn.js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faMobile } from '@fortawesome/free-solid-svg-icons';\nimport { faKey } from '@fortawesome/free-solid-svg-icons';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/\"\n});\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await api.get(\"/\");\n      console.log(response.data.data.list);\n      setList(response.data.data.list);\n    } catch (err) {}\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      console.log(name);\n      const response = await api.post(\"/create\", {\n        name\n      });\n      console.log(response);\n      setName(\"\");\n      fetchData();\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Task Manager - PERN demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: handleSubmit,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"head\",\n        children: \"Content Read from POSTGRES via Express API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), list && list.map(l => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [l.name, \"\\xA0\", l.completed === true ? 'Done' : 'Not Done']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 20\n          }, this)\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MHbChKwUs5bwy+5rKnwFfoPVZ80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vikas/Downloads/TaskManager-master/TaskManager-master/client/src/App.js"],"names":["FontAwesomeIcon","faUser","faEnvelope","faMobile","faKey","faUserEdit","axios","useEffect","useState","api","create","baseURL","App","name","setName","list","setList","fetchData","response","get","console","log","data","err","handleSubmit","e","preventDefault","post","target","value","map","l","completed","id"],"mappings":"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","sourcesContent":["import './App.css';\n   //import conn from './Conn.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faMobile } from '@fortawesome/free-solid-svg-icons'\nimport { faKey } from '@fortawesome/free-solid-svg-icons'\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst api = axios.create({\n  baseURL : \"http://localhost:5000/\"\n});\n\nfunction App() {\n\n  const [name,setName] = useState('');\n  const [list,setList] = useState([]);\n\n  const fetchData = async ()=>{\n    try{\n        const response = await api.get(\"/\");\n        console.log(response.data.data.list);\n        setList(response.data.data.list);\n    }catch(err){}\n};\n  const handleSubmit = async (e)=>{\n    e.preventDefault();\n    try{\n      console.log(name);\n      const response =  await api.post(\"/create\", {\n        name\n      }\n      );\n      console.log(response);\n      setName(\"\");\n      fetchData();\n    }catch(err){}\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n         Task Manager - PERN demo\n        </p>\n        <form action=\"\">\n         <div>\n          <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Name\"\n              value = { name }\n              onChange = {(e)=>setName(e.target.value)}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick = {handleSubmit}\n          >\n            Add\n          </button>\n          </div> \n        </form>\n        <span className=\"head\">\n          Content Read from POSTGRES via Express API\n        </span>\n        {list &&\n           \n            list.map((l) => {\n              return(\n              <div key={ list.id }>\n\n                   <h3>{ l.name }&nbsp;{ l.completed === true ? 'Done' : 'Not Done' }</h3>\n                   \n              </div>\n              )\n            })\n            \n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}